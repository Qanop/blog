{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/set-access-to-k8s-thru-rbac-token","result":{"data":{"markdownRemark":{"id":"e44d424d-8b3e-5e30-92fe-6c950d849a66","html":"<p>Recently, I was trying to find a suitable way to share the k8s logs with the development team. After searching the internet, I finally found a suitable and current solution for the new kuberentes versions. With a little help and a mini-customization of the code, I present the result for everyone who will need help. Let the code be with you!</p>\n<p>(Just watch out for TLS auth… Soo… To be fixed later… )   (ó﹏ò｡)</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${CLUSTERNAME}</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${NAMESPACE}</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${USERNAME}</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${K8S_CONTEXT}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">echo</span> Usage: <span class=\"token assign-left variable\">K8S_CONTEXT</span><span class=\"token operator\">=</span>admin.context <span class=\"token assign-left variable\">CLUSTERNAME</span><span class=\"token operator\">=</span>project.name <span class=\"token assign-left variable\">NAMESPACE</span><span class=\"token operator\">=</span>default <span class=\"token assign-left variable\">USERNAME</span><span class=\"token operator\">=</span>dev ./script.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># Command with context to admin user</span>\n<span class=\"token assign-left variable\">KUBE_COMMAND</span><span class=\"token operator\">=</span><span class=\"token string\">\"kubectl --context <span class=\"token variable\">$K8S_CONTEXT</span>\"</span>\n\n<span class=\"token variable\">$KUBE_COMMAND</span> delete serviceaccount/<span class=\"token variable\">$USERNAME</span>-sa\n<span class=\"token variable\">$KUBE_COMMAND</span> delete clusterrole.rbac.authorization.k8s.io/<span class=\"token variable\">$USERNAME</span>-cr\n<span class=\"token variable\">$KUBE_COMMAND</span> delete rolebinding.rbac.authorization.k8s.io/<span class=\"token variable\">$USERNAME</span>-rb\n\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> <span class=\"token variable\">$KUBE_COMMAND</span> apply -f -</span>\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: <span class=\"token variable\">$USERNAME</span>-sa\n  namespace: <span class=\"token variable\">$NAMESPACE</span>\nEOF</span>\n\n<span class=\"token comment\"># Set here what resources are allowed to enter</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> <span class=\"token variable\">$KUBE_COMMAND</span> apply -f -</span>\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: <span class=\"token variable\">$USERNAME</span>-cr\nrules:\n- verbs: [\"get\", \"list\", \"watch\"]\n  resources: \n  - pods\n  - deployments\n  - jobs\n  - cronjobs\n  - pods/log\n  apiGroups: [\"\", \"apps\", \"batch\"]\nEOF</span>\n\n\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> <span class=\"token variable\">$KUBE_COMMAND</span> apply -f -</span>\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: <span class=\"token variable\">$USERNAME</span>-rb\n  namespace: <span class=\"token variable\">$NAMESPACE</span>\nsubjects:\n- kind: ServiceAccount\n  name: <span class=\"token variable\">$USERNAME</span>-sa\n  namespace: <span class=\"token variable\">$NAMESPACE</span>\nroleRef:\n  kind: ClusterRole\n  name: <span class=\"token variable\">$USERNAME</span>-cr\n  apiGroup: rbac.authorization.k8s.io\nEOF</span>\n\n<span class=\"token assign-left variable\">TOKEN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>$KUBE_COMMAND describe -n default secrets <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>$KUBE_COMMAND describe -n default serviceaccount $USERNAME-sa <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -i Tokens <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> token: <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\n\nkubectl --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span> config set-cluster <span class=\"token variable\">$CLUSTERNAME</span> --server<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>$KUBE_COMMAND config view -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.clusters[0].cluster.server}'</span><span class=\"token variable\">)</span></span>\nkubectl --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span> config set-credentials <span class=\"token variable\">$CLUSTERNAME</span>-<span class=\"token variable\">$USERNAME</span> --token<span class=\"token operator\">=</span><span class=\"token variable\">$TOKEN</span> --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span>\nkubectl --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span> config set-context <span class=\"token variable\">$CLUSTERNAME</span> --cluster<span class=\"token operator\">=</span><span class=\"token variable\">$CLUSTERNAME</span> --user<span class=\"token operator\">=</span><span class=\"token variable\">$CLUSTERNAME</span>-<span class=\"token variable\">$USERNAME</span>\nkubectl --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span> config use-context <span class=\"token variable\">$CLUSTERNAME</span>\n\nkubectl --kubeconfig<span class=\"token operator\">=</span>kubeconfig-<span class=\"token variable\">$CLUSTERNAME</span> --insecure-skip-tls-verify auth can-i get pods --namespace <span class=\"token variable\">$NAMESPACE</span></code></pre></div>","fields":{"slug":"/posts/set-access-to-k8s-thru-rbac-token","tagSlugs":["/tag/technology/","/tag/ops-dev-ops/"]},"frontmatter":{"date":"2021-08-01T20:28:38.000Z","description":"How to give access only to logs to dev team on running k8s env? I finally found gist snippet that works","tags":["Technology","Ops / DevOps"],"title":"Set access to k8s thru RBAC Token","socialImage":"media/server-5.jpg"}}},"pageContext":{"slug":"/posts/set-access-to-k8s-thru-rbac-token"}},"staticQueryHashes":["1797451822","251939775","401334301"]}